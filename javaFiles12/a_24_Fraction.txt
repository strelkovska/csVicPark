/*********************
 * A Class for implementing the data type fraction
 * 
 *
 *   
 *
 *
 ********************/
 import java.util.Scanner;

 public class a_24_Fraction{
    public static void main(String[] arg){
	 Fraction res = new Fraction();
	 Fraction fra3 = new Fraction("Enter the values");
	 System.out.println(fra3);
	 Fraction fra1 = new Fraction(1,3);
	 System.out.println(fra1);
	// Fraction fra2 = new Fraction(0,0);
	 res=fra1.plus(fra3);
	 System.out.println("result is: " + res);
		 
     } 
 }
class Fraction{
	                  // instance variables 
    private int num;               // top part
    private int den;                // bottom part

    private Scanner sc=new Scanner(System.in);;
	/*********************
	 * Constructor for objects of class Fraction
	*  Create an object representing 0/1
	 ********************/
	public Fraction()	{
	                // initialise instance variables
		num = 0;
		den = 1;
	}
	/*********************
	 * Construct a fraction given two ints (numerator first)
	 * 
	 * @param n the numerator
	 * @param d the denominator
	 ********************/
	public Fraction(int num, int den)	{
		        // initialise instance variables
		this.num = num;
		this.den = den;
                             // reduce
        	this.reduce();
	}

	/*********************
	 * A method to add two fractions this + other
	 * 
	 ********************/
	public Fraction(String prompt){
	  	 System.out.println(prompt);
	  	 System.out.println("n?")	;
	   	int n=sc.nextInt();
	   	System.out.println("d?")	;
	   	int d=sc.nextInt();
	   	num=n;
	   	den=d;	
		reduce();
		
	}
	public  Fraction plus(Fraction other){
        	Fraction result = new Fraction(num*other.den + den*other.num, den*other.den);
		System.out.println(this.toString()+ "+"+ other+"=");
		return result;		
	}
	
	
         /*********************
	 * 
	 * @return a String representation of the Fraction 
	 ********************/
	
	public String toString(){
                if (den != 0)
	              return("" + num + "/" + den);
                else if (num ==0)
                         return "NaN";
                else if (num > 0)
                         return "Infinity";
                 else 
                         return " - Infinity";

	}
         /*********************
 	 * 
	 * reduce Fraction object to lowest terms 
	 ********************/
         private void reduce(){
           for (int i = Math.min(Math.abs(num),Math.abs(den)); i>=2;i--)   // we don't need to open and close brackets here 
             if (num%i == 0 && den%i == 0){                 //because if(..){..} is one statement
                num/=i;
                den/=i;
             } // end if
        }// end reduce
}// end Fraction class